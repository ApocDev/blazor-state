name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
 branches:
  include:
  - master
 paths:
  include:
  - documentation/*

# no PR builds
pr: none

queue:
  name: TimeWarpEnterprises


variables:
  DocPath: '$(System.DefaultWorkingDirectory)\documentation\_site\*'
  GitHubUsername: TimeWarpEngineering
  RepositoryName: 'blazor-state'
  CommitMessage: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)


steps:
- script: echo Build Blazor-State Docs

- task: DotNetCoreCLI@2
  displayName: Build BlazorState
  inputs:
    command: build
    projects: 'source/BlazorState/BlazorState.csproj'
    configuration: debug

# Command Line
# Run a command line script using cmd.exe on Windows and bash on macOS and Linux.
- task: CmdLine@2
  inputs:
    script: 'docfx documentation/docfx.json' 
    #workingDirectory: # Optional
    #failOnStderr: false # Optional

- task: DeleteFiles@1
  displayName: Delete files from 
  inputs:
    Contents: ghpages
  enabled: true

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)\documentation\_site\*'
    ArtifactName: drop
    publishLocation: Container  

# - task: AccidentalFish.githubpages-publish.AccidentalFish.GitHubPages-Publish.GitHubPagesPublish@0
#   displayName: Publishes to GitHub Pages
#   inputs:
#     docPath: '$(System.DefaultWorkingDirectory)\documentation\_site\*'
#     githubusername: TimeWarpEngineering
#     githubemail: '$(GitHubEmail)'
#     githubaccesstoken: $(GitHubAccessToken)
#     repositoryname: 'blazor-state'
#   enabled: false

# - task: PowerShell@2
#   displayName: 'PowerShell Script'
#   inputs:
#     targetType: FilePath
#     filePath: Build/PublishToGitHubPages.ps1
#   env: 
#     GitHubAccessTokenSecret: $(GitHubAccessToken)

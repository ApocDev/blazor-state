trigger:
 branches:
  include:
  - master
 paths:
  include:
  - source/BlazorState/*
  - source/BlazorState.Js/*

# no PR builds
pr:
- master
- releases/*

queue:
  name: TimeWarpEnterprises

steps:
- script: echo Build.SourceVersion $(Build.SourceVersion)
- script: echo Build.SourceVersion $(BuildConfiguration)

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: source/BlazorState.Js

- task: DotNetCoreCLI@2
  displayName: Build BlazorState
  inputs:
    command: build
    projects: 'source/BlazorState/BlazorState.csproj'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/source/BlazorState/bin/Version.txt'
    ArtifactName: Version
    publishLocation: Container

- task: DotNetCoreCLI@2
  displayName: Run all Tests in the repo gather coverage data
  continueOnError: false
  inputs:
    command: test
    arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
    projects: "**/*Tests/*.csproj"


# Upload coverage to codecov.io
# - script: |
#    %USERPROFILE%\.nuget\packages\codecov\1.5.0\tools\codecov.exe -f "./test/MyTestProject/coverage.opencover.xml" -t $(CODECOV_TOKEN)
# displayName: Upload coverage to codecov.io


- task: DotNetCoreCLI@2
  displayName: dotnet pack blazor-state
  inputs:
    command: pack
    packagesToPack: 'source\BlazorState\BlazorState.csproj'
    configurationToPack: debug
    
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: Nuget
    publishLocation: Container

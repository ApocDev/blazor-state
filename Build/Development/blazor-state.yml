name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
variables:
  Major: '0'
  Minor: '4'
  Patch: '0'
  Version: "$(Major).$(Minor).$(Patch)-beta-$(Build.BuildID)"
  Configuration: debug
trigger:
 branches:
  include:
  - dev
 paths:
  include:
  - source/BlazorState/*
  - source/BlazorState.Js/*
pr: none # will disable PR builds entirely

 
jobs:
- job: MyJob
  timeoutInMinutes: 10
  pool: TimeWarpEnterprises
  workspace:
    clean: all
  steps:
  - script: echo Version $(Version)
  - script: echo Building the blazor-state nuget package on MyGet

  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: source/BlazorState.Js

  - powershell: New-Item -ItemType Directory -Force -Path .\source\BlazorState\bin\Packages
    displayName: 'PowerShell Script Ensure Packages Directory'

  - task: DotNetCoreCLI@2
    displayName: Build BlazorState First
    inputs:
      command: build
      projects: 'source/BlazorState/BlazorState.csproj'
      configuration: $(Configuration)

  - task: DotNetCoreCLI@2
    displayName: Build all
    inputs:
      command: build
      projects: '**/*.csproj'
      configuration: $(Configuration)

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: '**\*Tests\*.csproj'
      configurationToPack: $(Configuration)

  - task: DotNetCoreCLI@2
    displayName: dotnet pack blazor-state
    inputs:
      command: pack
      packagesToPack: 'source\BlazorState\BlazorState.csproj'
      versionEnvVar: Version
      versioningScheme: byEnvVar
      configurationToPack: $(Configuration)

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: drop
      publishLocation: Container

  - task: DotNetCoreCLI@2
    displayName: Push Nuget to MyGet
    inputs:
      command: custom
      custom: nuget
      arguments: 'push $(Build.ArtifactStagingDirectory)\*.nupkg -s https://www.myget.org/F/timewarp-enterprises/api/v3/index.json -k $(MyGetApiKey)'
- job:
  steps:
  - script: echo "Job2"
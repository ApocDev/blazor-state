name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
 branches:
  include:
  - master

queue:
  name: TimeWarpEnterprises

variables:
 Major: '0'
 Minor: '3'
 Patch: '0'
 Version: "$(Major).$(Minor).$(Patch)"
steps:
- script: echo Version $(Version)

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: source/BlazorState.Js

- task: DotNetCoreInstaller@0
  displayName: Use .NET Core sdk 2.1.403
  inputs:
    version: 2.1.403


- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: 'source/BlazorState/BlazorState.csproj'
    configuration: debug

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: "**/*Tests/*.csproj"
    configurationToPack: debug

- task: DotNetCoreCLI@2
  displayName: dotnet pack blazor-state
  inputs:
    command: pack
    packagesToPack: 'source\BlazorState\BlazorState.csproj'
    versionEnvVar: Version
    versioningScheme: byEnvVar
    configurationToPack: release
    
- task: NuGetCommand@2
  displayName: 'NuGet pack Templates'
  inputs:
    command: pack
    packagesToPack: $(Build.SourcesDirectory)/source/TimeWarp.AspNetCore.Blazor.Templates/TimeWarp.AspNetCore.Blazor.Templates.nuspec
    configurationToPack: debug
    versioningScheme: byEnvVar
    versionEnvVar: Version
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: drop
    publishLocation: Container

- task: NuGetCommand@2
  displayName: Push Nuget to Nuget
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: Nuget.org
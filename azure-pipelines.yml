# Built-test-artifacts-prod pipeline
# Build the blazor-state package
# Run the tests
# Deploy to Azure-DevOps Artifacts
# Deploy to Nuget and or GitHub Package Managers
# Create a Release in GitHub

# Only run against master
trigger:
- master

# Don't run against PRs
pr: none

variables:
  GlobalCounterReset: '0'
  GlobalPipelineCounter: $[counter(variables.GlobalCounterReset,0)]

stages:
- stage: Stage1 
  variables:
    Stage1CounterReset: '0'
    Stage1Counter: $[counter(variables.Stage1CounterReset,0)]
  jobs:
  - job: some_Job
    workspace:
      clean: all
    steps:
    - script: |
        echo 'GlobalPipelineCounter:$(GlobalPipelineCounter)'
        echo 'Stage1Counter:$(Stage1Counter)'

- stage: Stage2
  variables:
    Stage2CounterReset: '0'
    Stage2Counter: $[counter(variables.Stage2CounterReset,0)]
  dependsOn: Stage1
  jobs:
  - job: some_Job2
    steps:
    - script: | 
         echo 'GlobalPipelineCounter:$(GlobalPipelineCounter)'
         echo 'Stage1Counter:$(Stage1Counter)'
         echo 'Stage2Counter:$(Stage2Counter)'
         echo 'Stage3Counter:$(Stage3Counter)'

# environment NuGet-org has an approval check so we can see if the counter gets bumped or not.
- stage: Stage3
  variables:
    Stage3CounterReset: '0'
    Stage3Counter: $[counter(variables.Stage2CounterReset,0)]
  dependsOn: Stage2
  jobs:
  - deployment: DeployNuget
    pool:
      name: 'TimeWarpEnterprises'
      workspace:
        clean: all
    displayName: Stage3
    environment: NuGet-org 
    strategy:
     runOnce:
       deploy:
        steps:
          - script: | 
              echo 'GlobalPipelineCounter:$(GlobalPipelineCounter)'
              echo 'Stage1Counter:$(Stage1Counter)'
              echo 'Stage2Counter:$(Stage2Counter)'
              echo 'Stage3Counter:$(Stage3Counter)'
